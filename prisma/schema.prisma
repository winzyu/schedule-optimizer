generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Course {
  id           String    @id @default(uuid())
  crn          String
  subjectCode  String
  courseNumber String
  sectionCode  String
  title        String
  units        Int
  instructor   String
  description  String?
  geCourses    String[]
  finalExam    DateTime?
  dropDate     String?

  // Optional, hardest to keep track of
  openSeats     Int? @default(0)
  reservedSeats Int? @default(0)
  waitlistSeats Int? @default(0)

  // Relationships
  meetings  Meeting[]
  schedules ScheduleToCourse[]
}

model Meeting {
  id       String @id @default(uuid())
  time     String
  days     String
  type     String
  location String

  // Relationship to Course
  courseId String
  course   Course @relation(fields: [courseId], references: [id], onDelete: Cascade)
}

model Schedule {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationship with user
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  // Many-to-many relationship with courses
  courses ScheduleToCourse[]
}

// Join table
model ScheduleToCourse {
  // References to the related models
  schedule   Schedule @relation(fields: [scheduleId], references: [id], onDelete: Cascade)
  scheduleId String
  course     Course   @relation(fields: [courseId], references: [id], onDelete: Cascade)
  courseId   String

  // composite primary key
  @@id([scheduleId, courseId])
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String
  password  String // In practice, this should be hashed
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationship with schedules
  schedules Schedule[]
}
